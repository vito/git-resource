#!/bin/sh
# vim: set ft=sh

set -e -u

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

load_pubkey $REQUEST

uri=$(jq -r '.source.uri // ""' < $REQUEST)
branch=$(jq -r '.source.branch // ""' < $REQUEST)
repository=$(jq -r '.params.repository // ""' < $REQUEST)
tag=$(jq -r '.params.tag // ""' < $REQUEST)
tag_prefix=$(jq -r '.params.tag_prefix // ""' < $REQUEST)
rebase=$(jq -r '.params.rebase // false' < $REQUEST)

if [ -z "$uri" ]; then
  echo "invalid source configuration (missing uri)"
  exit 1
fi

if [ -z "$branch" ]; then
  echo "invalid source configuration (missing branch)"
  exit 1
fi

if [ -z "$repository" ]; then
  echo "invalid source configuration (missing repository)"
  exit 1
fi

cd $SOURCE

if [ -n "$tag" ] && [ ! -f "$tag" ]; then
  echo "tag file '$tag' does not exist"
  exit 1
fi

tag_name=""
if [ -n "$tag" ]; then
  tag_name="$(cat $tag)"
fi

cd $repository

tag_and_push() {
  if [ -n "$tag_name" ]; then
    git tag -f "${tag_prefix}${tag_name}"
  fi

  git push --tags push-target HEAD:refs/heads/$branch
}

git remote add push-target $uri

if [ "$rebase" = "true" ]; then
  while true; do
    echo "rebasing..."

    git pull --rebase push-target $branch

    # oh god this is really the only way to do this
    result_file=$(mktemp /tmp/git-result.XXXXXX)

    echo 0 > $result_file

    {
      tag_and_push 2>&1 || {
        echo $? > $result_file
      }
    } | tee /tmp/push-failure

    # despite what you may think, the embedded cat does not include the
    # trailing linebreak
    #
    # $() appears to trim it
    #
    # someone rewrite this please
    #
    # pull requests welcome
    if [ "$(cat $result_file)" = "0" ]; then
      echo "pushed"
      break
    fi

    # failed for reason other than non-fast-forward / fetch-first
    if ! grep -q '\[rejected\]' /tmp/push-failure; then
      echo "failed with non-rebase error"
      exit 1
    fi

    echo "rebasing and trying again..."
  done
else
  tag_and_push
fi

jq -n "{
  version: {ref: $(git rev-parse HEAD | jq -R .)},
  metadata: $(git_metadata)
}" > $RESPONSE
